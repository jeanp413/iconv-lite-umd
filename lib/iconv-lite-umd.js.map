{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/iconv-lite/lib/index-web.js","webpack:///./node_modules/iconv-lite/lib/index.js","webpack:///./node_modules/iconv-lite/lib/bom-handling.js","webpack:///./node_modules/iconv-lite/encodings/index.js","webpack:///./node_modules/iconv-lite/encodings/internal.js","webpack:///./node_modules/safer-buffer/safer.js","webpack:///./node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/iconv-lite/encodings/utf16.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-data.js","webpack:///./node_modules/iconv-lite/lib/streams.js","webpack:///./node_modules/iconv-lite/backends/web.js"],"names":["root","factory","exports","module","define","amd","a","i","self","this","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","setBackend","stream_module","bomHandling","iconv","encodings","defaultCharUnicode","defaultCharSingleByte","encode","options","encoder","getEncoder","trail","backend","concatByteResults","decode","decoder","getDecoder","encodingExists","enc","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecOptions","codec","codecDef","encodingName","createEncoder","bomAware","addBOM","PrependBOM","createDecoder","stripBOM","StripBOM","enableStreamingAPI","supportsStreams","streams","IconvLiteEncoderStream","IconvLiteDecoderStream","encodeStream","decodeStream","Transform","pass","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","binary","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","charCode","curByte","safer","Safer","kStringMaxLength","process","binding","constants","MAX_LENGTH","MAX_STRING_LENGTH","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","cwd","chdir","umask","g","Function","window","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","nb","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","copyProps","SafeBuffer","utf16le","Utf16LEEncoder","Utf16LEDecoder","allocBytes","chars","Uint16Array","bytesToResult","defaultChar","leadByte","byteLen","prefix","lastIdx","allocRawChars","srcByteView","rawCharsToResult","ucs2","utf16be","Utf16BEEncoder","Utf16BEDecoder","bytesPos","char","srcBytes","DataView","getUint16","utf16","Utf16Decoder","initialBufs","initialBufsLen","_detectEndiannessAndSetDecoder","bufs","defaultEncoding","charsProcessed","asciiCharsLE","asciiCharsBE","outer_loop","detectEncoding","resStr","reduce","_sbcs","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","opts","maccenteuro","ibm808","cp808","mik","cp720","ascii8bit","usascii","ansix34","ansix341968","ansix341986","csascii","cp367","ibm367","isoir6","iso646us","iso646irv","us","latin1","latin2","latin3","latin4","latin5","latin6","latin7","latin8","latin9","latin10","csisolatin1","csisolatin2","csisolatin3","csisolatin4","csisolatincyrillic","csisolatinarabic","csisolatingreek","csisolatinhebrew","csisolatin5","csisolatin6","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","isoir14","isoir57","isoir100","isoir101","isoir109","isoir110","isoir144","isoir127","isoir126","isoir138","isoir148","isoir157","isoir166","isoir179","isoir199","isoir203","isoir226","cp819","ibm819","cyrillic","arabic","arabic8","ecma114","asmo708","greek","greek8","ecma118","elot928","hebrew","hebrew8","turkish","turkish8","thai","thai8","celtic","celtic8","isoceltic","tis6200","tis62025291","tis62025330","cspc8codepage437","cspc775baltic","cspc850multilingual","cspcp852","cspc862latinhebrew","cpgr","msee","mscyrl","msansi","msgreek","msturk","mshebr","msarab","winbaltrim","cp20866","ibm878","cskoi8r","cp21866","ibm1168","strk10482002","tcvn5712","tcvn57121","gb198880","cn","csiso14jisc6220ro","jisc62201969ro","jp","cshproman8","r8","roman8","xroman8","ibm1051","mac","csmacintosh","UNASSIGNED_NODE","_dbcs","table","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","gb18030","commonThirdByteNodeIdx","commonFourthByteNodeIdx","firstByteNode","secondNodeIdx","secondByteNode","thirdNodeIdx","thirdByteNode","k","commonFourthNodeIdx","fourthNodeIdx","fourthByteNode","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","to","_fillEncodeTable","encodeAdd","uChar","_setEncodeChar","defCharSB","DBCSDecoder","DBCSEncoder","addr","node","hexAddr","chunk","curAddr","writeTable","_getDecodeTrieNode","part","codeTrail","seq","uCode","high","dbcsCode","bucket","_getEncodeBucket","low","oldVal","nodeIdx","hasValues","subNodeEmpty","mbCode","subNodeIdx","newPrefix","_setEncodeSequence","seqObj","nextChar","bytePos","resCode","subtable","idx","findIdx","uChars","gbChars","prevBytes","prevOffset","seqStart","charPos","ptr","uCodeLead","bytesArr","mid","shiftjis","csshiftjis","mskanji","sjis","windows31j","ms31j","xsjis","windows932","ms932","cp932","eucjp","gb2312","gb231280","gb23121980","csgb2312","csiso58gb231280","euccn","windows936","ms936","cp936","gbk","xgbk","isoir58","chinese","windows949","ms949","cp949","cseuckr","csksc56011987","euckr","isoir149","korean","ksc56011987","ksc56011989","ksc5601","windows950","ms950","cp950","big5","big5hkscs","cnbig5","csbig5","xxbig5","conv","decodeStrings","super","done","cb","chunks","numBytes","finalLen","filter","totalLen","curPos","numChars","BYTES_PER_ELEMENT","rawChars","TextDecoder","ignoreBOM"],"mappings":"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","file":"iconv-lite-umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\"use strict\";\n\nvar iconv = (module.exports = require(\"./index\"));\n\niconv.setBackend(require(\"../backends/web\"));\n","\"use strict\";\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = \"�\";\niconv.defaultCharSingleByte = \"?\";\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    if (typeof str !== \"string\") throw new TypeError(\"iconv-lite can only encode() strings.\");\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n\n    return trail && trail.length > 0 ? iconv.backend.concatByteResults([res, trail]) : res;\n};\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === \"string\")\n        throw new TypeError(\"iconv-lite can't decode() strings, only Buffer/Uint8Array-s.\");\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? res + trail : res;\n};\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings) {\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    }\n\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    for (;;) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec) return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef) {\n                    codecOptions[key] = codecDef[key];\n                }\n\n                if (!codecOptions.encodingName) {\n                    codecOptions.encodingName = enc;\n                }\n\n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName) {\n                    codecOptions.encodingName = enc;\n                }\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(`Encoding not recognized: '${encoding}' (searched as: '${enc}')`);\n        }\n    }\n};\n\niconv._canonicalizeEncoding = function (encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (\"\" + encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n};\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    const codec = iconv.getCodec(encoding);\n\n    let encoder = codec.createEncoder\n        ? codec.createEncoder(options, iconv)\n        : new codec.encoder(options, codec, iconv.backend);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n};\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    const codec = iconv.getCodec(encoding);\n\n    let decoder = codec.createDecoder\n        ? codec.createDecoder(options, iconv)\n        : new codec.decoder(options, codec, iconv.backend);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n};\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\n    if (iconv.supportsStreams) return;\n\n    // Dependency-inject stream module to create IconvLite stream classes.\n    var streams = require(\"./streams\")(stream_module);\n\n    // Not public API yet, but expose the stream classes.\n    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\n\n    // Streaming API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        const encoder = iconv.getEncoder(encoding, options);\n        return new iconv.IconvLiteEncoderStream(encoder, options, iconv);\n    };\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        const decoder = iconv.getDecoder(encoding, options);\n        return new iconv.IconvLiteDecoderStream(decoder, options, iconv);\n    };\n\n    iconv.supportsStreams = true;\n};\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar stream_module;\ntry {\n    stream_module = require(\"stream\");\n} catch (e) {\n    // Skip\n}\n\nif (stream_module && stream_module.Transform) {\n    iconv.enableStreamingAPI(stream_module);\n} else {\n    // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n    iconv.encodeStream = iconv.decodeStream = function () {\n        throw new Error(\n            \"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\"\n        );\n    };\n}\n\n// Add a helpful message if the backend is not set.\nObject.defineProperty(iconv, \"backend\", {\n    configurable: true,\n    get() {\n        throw new Error(\"iconv-lite backend is not set. Please use iconv.setBackend().\");\n    },\n});\n\niconv.setBackend = function setBackend(backend) {\n    delete iconv.backend;\n    iconv.backend = backend;\n    iconv._codecDataCache = {};\n};\n\n// eslint-disable-next-line no-constant-condition\nif (\"Ā\" != \"\\u0100\") {\n    // eslint-disable-next-line no-console\n    console.error(\n        \"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\"\n    );\n}\n","\"use strict\";\n\nvar BOMChar = \"\\uFEFF\";\n\nexports.PrependBOM = class PrependBOMWrapper {\n    constructor(encoder) {\n        this.encoder = encoder;\n        this.addBOM = true;\n    }\n\n    write(str) {\n        if (this.addBOM) {\n            str = BOMChar + str;\n            this.addBOM = false;\n        }\n        return this.encoder.write(str);\n    }\n\n    end() {\n        return this.encoder.end();\n    }\n};\n\nexports.StripBOM = class StripBOMWrapper {\n    constructor(decoder, options) {\n        this.decoder = decoder;\n        this.pass = false;\n        this.options = options || {};\n    }\n\n    write(buf) {\n        var res = this.decoder.write(buf);\n        if (this.pass || !res) return res;\n\n        if (res[0] === BOMChar) {\n            res = res.slice(1);\n            if (typeof this.options.stripBOM === \"function\") this.options.stripBOM();\n        }\n\n        this.pass = true;\n        return res;\n    }\n\n    end() {\n        return this.decoder.end();\n    }\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf32\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it.\nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc)) exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8: { type: \"_internal\", bomAware: true },\n    cesu8: { type: \"_internal\", bomAware: true },\n    unicode11utf8: \"utf8\",\n\n    // NOTE: utf-16le/ucs2 are in utf16.js.\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex: { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\") {\n        this.encoder = InternalEncoderBase64;\n    } else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from(\"eda0bdedb2a9\", \"hex\").toString() !== \"💩\") {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require(\"string_decoder\").StringDecoder;\n\nif (!StringDecoder.prototype.end) {\n    // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function () {};\n}\n\nfunction InternalDecoder(options, codec) {\n    this.decoder = new StringDecoder(codec.enc);\n}\n\nInternalDecoder.prototype.write = function (buf) {\n    if (!Buffer.isBuffer(buf)) {\n        buf = Buffer.from(buf);\n    }\n\n    return this.decoder.write(buf);\n};\n\nInternalDecoder.prototype.end = function () {\n    return this.decoder.end();\n};\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function (str) {\n    return Buffer.from(str, this.enc);\n};\n\nInternalEncoder.prototype.end = function () {};\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64() {\n    this.prevStr = \"\";\n}\n\nInternalEncoderBase64.prototype.write = function (str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n};\n\nInternalEncoderBase64.prototype.end = function () {\n    return Buffer.from(this.prevStr, \"base64\");\n};\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8() {}\n\nInternalEncoderCesu8.prototype.write = function (str) {\n    const buf = Buffer.alloc(str.length * 3);\n    let bufIdx = 0;\n    for (let i = 0; i < str.length; i++) {\n        const charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80) {\n            buf[bufIdx++] = charCode;\n        } else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xc0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        } else {\n            // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xe0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n};\n\nInternalEncoderCesu8.prototype.end = function () {};\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function (buf) {\n    let acc = this.acc,\n        contBytes = this.contBytes,\n        accBytes = this.accBytes,\n        res = \"\";\n    for (let i = 0; i < buf.length; i++) {\n        const curByte = buf[i];\n        if ((curByte & 0xc0) !== 0x80) {\n            // Leading byte\n            if (contBytes > 0) {\n                // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) {\n                // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xe0) {\n                // Two-byte code\n                acc = curByte & 0x1f;\n                contBytes = 1;\n                accBytes = 1;\n            } else if (curByte < 0xf0) {\n                // Three-byte code\n                acc = curByte & 0x0f;\n                contBytes = 2;\n                accBytes = 1;\n            } else {\n                // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else {\n            // Continuation byte\n            if (contBytes > 0) {\n                // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--;\n                accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0) res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800) res += this.defaultCharUnicode;\n                    // Actually add character.\n                    else res += String.fromCharCode(acc);\n                }\n            } else {\n                // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc;\n    this.contBytes = contBytes;\n    this.accBytes = accBytes;\n    return res;\n};\n\nInternalDecoderCesu8.prototype.end = function () {\n    let res = \"\";\n    if (this.contBytes > 0) {\n        res += this.defaultCharUnicode;\n    }\n    return res;\n};\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","\"use strict\";\n\n// == UTF16-LE codec. ==========================================================\n// Note: We're not using Node.js native codec because StringDecoder implementation is buggy\n// (adds \\0 in some chunks; doesn't flag non-even number of bytes). We do use raw encoding/decoding\n// routines for performance where possible, though.\n\nexports.utf16le = class Utf16LECodec {\n    createEncoder(options, iconv) {\n        return new Utf16LEEncoder(iconv.backend);\n    }\n    createDecoder(options, iconv) {\n        return new Utf16LEDecoder(iconv.backend, iconv.defaultCharUnicode);\n    }\n    get bomAware() {\n        return true;\n    }\n};\n\nclass Utf16LEEncoder {\n    constructor(backend) {\n        this.backend = backend;\n    }\n\n    write(str) {\n        const bytes = this.backend.allocBytes(str.length * 2);\n        const chars = new Uint16Array(bytes.buffer, bytes.byteOffset, str.length);\n        for (let i = 0; i < str.length; i++) {\n            chars[i] = str.charCodeAt(i);\n        }\n        return this.backend.bytesToResult(bytes, bytes.length);\n    }\n\n    end() {}\n}\n\nclass Utf16LEDecoder {\n    constructor(backend, defaultChar) {\n        this.backend = backend;\n        this.defaultChar = defaultChar;\n        this.leadByte = -1;\n        this.leadSurrogate = undefined;\n    }\n\n    write(buf) {\n        // NOTE: This function is mostly the same as Utf16BEDecoder.write() with bytes swapped.\n        //   Please keep them in sync.\n        // NOTE: The logic here is more complicated than barely necessary due to several limitations:\n        //  1. Input data chunks can split 2-byte code units, making 'leadByte' necessary.\n        //  2. Input data chunks can split valid surrogate pairs, making 'leadSurrogate' necessary.\n        //  3. rawCharsToResult() of Web backend converts all lone surrogates to '�', so we need to make\n        //     sure we don't feed it parts of valid surrogate pairs.\n        //  4. For performance reasons we want to use initial buffer as much as we can. This is not\n        //     possible if after our calculations the 2-byte memory alignment of a Uint16Array is lost,\n        //     in which case we have to do a copy.\n\n        if (buf.length === 0) {\n            return \"\";\n        }\n        let offset = 0;\n        let byteLen = buf.length;\n\n        // Process previous leadByte\n        let prefix = \"\";\n        if (this.leadByte !== -1) {\n            offset++;\n            byteLen--;\n            prefix = String.fromCharCode(this.leadByte | (buf[0] << 8));\n        }\n\n        // Set new leadByte if needed\n        if (byteLen & 1) {\n            this.leadByte = buf[buf.length - 1];\n            byteLen--;\n        } else {\n            this.leadByte = -1;\n        }\n\n        // Process leadSurrogate\n        if (prefix.length || byteLen) {\n            // Add high surrogate from previous chunk.\n            if (this.leadSurrogate) {\n                if (prefix.length) {\n                    prefix = this.leadSurrogate + prefix;\n                } else {\n                    // Make sure 'chars' don't start with a lone low surrogate; it will mess with rawCharsToResult.\n                    const lastChar = String.fromCharCode(buf[offset] | (buf[offset + 1] << 8));\n                    prefix = this.leadSurrogate + lastChar;\n                    offset += 2;\n                    byteLen -= 2;\n                }\n                this.leadSurrogate = undefined;\n            }\n\n            // Slice off a new high surrogate at the end of the current chunk.\n            if (byteLen) {\n                const lastIdx = offset + byteLen - 2;\n                const lastChar = buf[lastIdx] | (buf[lastIdx + 1] << 8);\n                if (0xd800 <= lastChar && lastChar < 0xdc00) {\n                    this.leadSurrogate = String.fromCharCode(lastChar);\n                    byteLen -= 2;\n                }\n            } else {\n                // slice from prefix\n                const lastChar = prefix.charCodeAt(prefix.length - 1);\n                if (0xd800 <= lastChar && lastChar < 0xdc00) {\n                    this.leadSurrogate = prefix[prefix.length - 1];\n                    prefix = prefix.slice(0, -1);\n                }\n            }\n        }\n\n        let chars;\n        if (((buf.byteOffset + offset) & 1) === 0) {\n            // If byteOffset is aligned, just use the ArrayBuffer from input buf.\n            chars = new Uint16Array(buf.buffer, buf.byteOffset + offset, byteLen >> 1);\n        } else {\n            // If byteOffset is NOT aligned, create a new aligned buffer and copy the data.\n            chars = this.backend.allocRawChars(byteLen >> 1);\n            const srcByteView = new Uint8Array(buf.buffer, buf.byteOffset + offset, byteLen);\n            const destByteView = new Uint8Array(chars.buffer, chars.byteOffset, byteLen);\n            destByteView.set(srcByteView);\n        }\n\n        return prefix + this.backend.rawCharsToResult(chars, chars.length);\n    }\n\n    end() {\n        let res;\n        if (this.leadSurrogate || this.leadByte !== -1) {\n            res =\n                (this.leadSurrogate ? this.leadSurrogate : \"\") +\n                (this.leadByte !== -1 ? this.defaultChar : \"\");\n            this.leadSurrogate = undefined;\n            this.leadByte = -1;\n        }\n        return res;\n    }\n}\nexports.ucs2 = \"utf16le\"; // Alias\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = class Utf16BECodec {\n    createEncoder(options, iconv) {\n        return new Utf16BEEncoder(iconv.backend);\n    }\n    createDecoder(options, iconv) {\n        return new Utf16BEDecoder(iconv.backend, iconv.defaultCharUnicode);\n    }\n    get bomAware() {\n        return true;\n    }\n};\n\nclass Utf16BEEncoder {\n    constructor(backend) {\n        this.backend = backend;\n    }\n\n    write(str) {\n        const bytes = this.backend.allocBytes(str.length * 2);\n        let bytesPos = 0;\n        for (let i = 0; i < str.length; i++) {\n            const char = str.charCodeAt(i);\n            bytes[bytesPos++] = char >> 8;\n            bytes[bytesPos++] = char & 0xff;\n        }\n        return this.backend.bytesToResult(bytes, bytesPos);\n    }\n\n    end() {}\n}\n\nclass Utf16BEDecoder {\n    constructor(backend, defaultChar) {\n        this.backend = backend;\n        this.defaultChar = defaultChar;\n        this.leadByte = -1;\n        this.leadSurrogate = undefined;\n    }\n\n    write(buf) {\n        // NOTE: This function is mostly copy/paste from Utf16LEDecoder.write() with bytes swapped.\n        // Please keep them in sync. Comments in that function apply here too.\n        if (buf.length === 0) {\n            return \"\";\n        }\n\n        let offset = 0;\n        let byteLen = buf.length;\n\n        // Process previous leadByte\n        let prefix = \"\";\n        if (this.leadByte !== -1) {\n            offset++;\n            byteLen--;\n            prefix = String.fromCharCode((this.leadByte << 8) | buf[0]);\n        }\n\n        // Set new leadByte\n        if (byteLen & 1) {\n            this.leadByte = buf[buf.length - 1];\n            byteLen--;\n        } else {\n            this.leadByte = -1;\n        }\n\n        // Process leadSurrogate\n        if (prefix.length || byteLen) {\n            // Add high surrogate from previous chunk.\n            if (this.leadSurrogate) {\n                if (prefix.length) {\n                    prefix = this.leadSurrogate + prefix;\n                } else {\n                    // Make sure 'chars' don't start with a lone low surrogate; it will mess with rawCharsToResult.\n                    const lastChar = String.fromCharCode((buf[offset] << 8) | buf[offset + 1]);\n                    prefix = this.leadSurrogate + lastChar;\n                    offset += 2;\n                    byteLen -= 2;\n                }\n                this.leadSurrogate = undefined;\n            }\n\n            // Slice off a new high surrogate at the end of the current chunk.\n            if (byteLen) {\n                const lastIdx = offset + byteLen - 2;\n                const lastChar = (buf[lastIdx] << 8) | buf[lastIdx + 1];\n                if (0xd800 <= lastChar && lastChar < 0xdc00) {\n                    this.leadSurrogate = String.fromCharCode(lastChar);\n                    byteLen -= 2;\n                }\n            } else {\n                // slice from prefix\n                const lastChar = prefix.charCodeAt(prefix.length - 1);\n                if (0xd800 <= lastChar && lastChar < 0xdc00) {\n                    this.leadSurrogate = prefix[prefix.length - 1];\n                    prefix = prefix.slice(0, -1);\n                }\n            }\n        }\n\n        // Convert the main chunk of bytes\n        const chars = this.backend.allocRawChars(byteLen >> 1);\n        const srcBytes = new DataView(buf.buffer, buf.byteOffset + offset, byteLen);\n        for (let i = 0; i < chars.length; i++) {\n            chars[i] = srcBytes.getUint16(i * 2);\n        }\n\n        return prefix + this.backend.rawCharsToResult(chars, chars.length);\n    }\n\n    end() {\n        let res;\n        if (this.leadSurrogate || this.leadByte !== -1) {\n            res =\n                (this.leadSurrogate ? this.leadSurrogate : \"\") +\n                (this.leadByte !== -1 ? this.defaultChar : \"\");\n            this.leadSurrogate = undefined;\n            this.leadByte = -1;\n        }\n        return res;\n    }\n}\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = class Utf16Codec {\n    createEncoder(options, iconv) {\n        options = options || {};\n        if (options.addBOM === undefined) options.addBOM = true;\n        return iconv.getEncoder(\"utf-16le\", options);\n    }\n    createDecoder(options, iconv) {\n        return new Utf16Decoder(options, iconv);\n    }\n};\n\nclass Utf16Decoder {\n    constructor(options, iconv) {\n        this.decoder = null;\n        this.initialBufs = [];\n        this.initialBufsLen = 0;\n\n        this.options = options || {};\n        this.iconv = iconv;\n    }\n\n    write(buf) {\n        if (!this.decoder) {\n            // Codec is not chosen yet. Accumulate initial bytes.\n            this.initialBufs.push(buf);\n            this.initialBufsLen += buf.length;\n\n            if (this.initialBufsLen < 16)\n                // We need more bytes to use space heuristic (see below)\n                return \"\";\n\n            // We have enough bytes -> detect endianness.\n            return this._detectEndiannessAndSetDecoder();\n        }\n\n        return this.decoder.write(buf);\n    }\n\n    end() {\n        if (!this.decoder) {\n            return this._detectEndiannessAndSetDecoder() + (this.decoder.end() || \"\");\n        }\n        return this.decoder.end();\n    }\n\n    _detectEndiannessAndSetDecoder() {\n        const encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        const resStr = this.initialBufs.reduce((a, b) => a + this.decoder.write(b), \"\");\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n}\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    const b = [];\n    let charsProcessed = 0;\n    let asciiCharsLE = 0,\n        asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\n\n    outer_loop: for (let i = 0; i < bufs.length; i++) {\n        const buf = bufs[i];\n        for (let j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 2) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xff && b[1] === 0xfe) return \"utf-16le\";\n                    if (b[0] === 0xfe && b[1] === 0xff) return \"utf-16be\";\n                }\n\n                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\n                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n    // So, we count ASCII as if it was LE or BE, and decide from that.\n    if (asciiCharsBE > asciiCharsLE) return \"utf-16be\";\n    if (asciiCharsBE < asciiCharsLE) return \"utf-16le\";\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || \"utf-16le\";\n}\n","\"use strict\";\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII).\n\nexports._sbcs = class SBCSCodec {\n    constructor(codecOptions, iconv) {\n        if (!codecOptions) throw new Error(\"SBCS codec is called without the data.\");\n\n        // Prepare char buffer for decoding.\n        if (\n            !codecOptions.chars ||\n            (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256)\n        )\n            throw new Error(\n                `Encoding '${codecOptions.type}' has incorrect 'chars' (must be of len 128 or 256)`\n            );\n\n        if (codecOptions.chars.length === 128) {\n            var asciiString = \"\";\n            for (let i = 0; i < 128; i++) {\n                asciiString += String.fromCharCode(i);\n            }\n            codecOptions.chars = asciiString + codecOptions.chars;\n        }\n\n        const decodeBuf = new Uint16Array(codecOptions.chars.length);\n\n        for (let i = 0; i < codecOptions.chars.length; i++)\n            decodeBuf[i] = codecOptions.chars.charCodeAt(i);\n\n        this.decodeBuf = decodeBuf;\n\n        // Encoding buffer.\n        const encodeBuf = iconv.backend.allocBytes(\n            65536,\n            iconv.defaultCharSingleByte.charCodeAt(0)\n        );\n\n        for (let i = 0; i < codecOptions.chars.length; i++)\n            encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n        this.encodeBuf = encodeBuf;\n    }\n\n    get encoder() {\n        return SBCSEncoder;\n    }\n\n    get decoder() {\n        return SBCSDecoder;\n    }\n};\n\nclass SBCSEncoder {\n    constructor(opts, codec, backend) {\n        this.backend = backend;\n        this.encodeBuf = codec.encodeBuf;\n    }\n\n    write(str) {\n        const bytes = this.backend.allocBytes(str.length);\n\n        for (let i = 0; i < str.length; i++) {\n            bytes[i] = this.encodeBuf[str.charCodeAt(i)];\n        }\n\n        return this.backend.bytesToResult(bytes, bytes.length);\n    }\n\n    end() {}\n}\n\nclass SBCSDecoder {\n    constructor(opts, codec, backend) {\n        this.decodeBuf = codec.decodeBuf;\n        this.backend = backend;\n    }\n\n    write(buf) {\n        // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n        const decodeBuf = this.decodeBuf;\n        const chars = this.backend.allocRawChars(buf.length);\n\n        for (let i = 0; i < buf.length; i++) {\n            chars[i] = decodeBuf[buf[i]];\n        }\n        return this.backend.rawCharsToResult(chars, chars.length);\n    }\n\n    end() {}\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    maccenteuro: {\n        type: \"_sbcs\",\n        chars:\n            \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\",\n    },\n\n    \"808\": \"cp808\",\n    ibm808: \"cp808\",\n    cp808: {\n        type: \"_sbcs\",\n        chars:\n            \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \",\n    },\n\n    mik: {\n        type: \"_sbcs\",\n        chars:\n            \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \",\n    },\n\n    cp720: {\n        type: \"_sbcs\",\n        chars:\n            \"\\x80\\x81éâ\\x84à\\x86çêëèïî\\x8d\\x8e\\x8f\\x90\\u0651\\u0652ô¤ـûùءآأؤ£إئابةتثجحخدذرزسشص«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ضطظعغفµقكلمنهوىي≡\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650≈°∙·√ⁿ²■\\u00a0\",\n    },\n\n    // Aliases of generated encodings.\n    ascii8bit: \"ascii\",\n    usascii: \"ascii\",\n    ansix34: \"ascii\",\n    ansix341968: \"ascii\",\n    ansix341986: \"ascii\",\n    csascii: \"ascii\",\n    cp367: \"ascii\",\n    ibm367: \"ascii\",\n    isoir6: \"ascii\",\n    iso646us: \"ascii\",\n    iso646irv: \"ascii\",\n    us: \"ascii\",\n\n    latin1: \"iso88591\",\n    latin2: \"iso88592\",\n    latin3: \"iso88593\",\n    latin4: \"iso88594\",\n    latin5: \"iso88599\",\n    latin6: \"iso885910\",\n    latin7: \"iso885913\",\n    latin8: \"iso885914\",\n    latin9: \"iso885915\",\n    latin10: \"iso885916\",\n\n    csisolatin1: \"iso88591\",\n    csisolatin2: \"iso88592\",\n    csisolatin3: \"iso88593\",\n    csisolatin4: \"iso88594\",\n    csisolatincyrillic: \"iso88595\",\n    csisolatinarabic: \"iso88596\",\n    csisolatingreek: \"iso88597\",\n    csisolatinhebrew: \"iso88598\",\n    csisolatin5: \"iso88599\",\n    csisolatin6: \"iso885910\",\n\n    l1: \"iso88591\",\n    l2: \"iso88592\",\n    l3: \"iso88593\",\n    l4: \"iso88594\",\n    l5: \"iso88599\",\n    l6: \"iso885910\",\n    l7: \"iso885913\",\n    l8: \"iso885914\",\n    l9: \"iso885915\",\n    l10: \"iso885916\",\n\n    isoir14: \"iso646jp\",\n    isoir57: \"iso646cn\",\n    isoir100: \"iso88591\",\n    isoir101: \"iso88592\",\n    isoir109: \"iso88593\",\n    isoir110: \"iso88594\",\n    isoir144: \"iso88595\",\n    isoir127: \"iso88596\",\n    isoir126: \"iso88597\",\n    isoir138: \"iso88598\",\n    isoir148: \"iso88599\",\n    isoir157: \"iso885910\",\n    isoir166: \"tis620\",\n    isoir179: \"iso885913\",\n    isoir199: \"iso885914\",\n    isoir203: \"iso885915\",\n    isoir226: \"iso885916\",\n\n    cp819: \"iso88591\",\n    ibm819: \"iso88591\",\n\n    cyrillic: \"iso88595\",\n\n    arabic: \"iso88596\",\n    arabic8: \"iso88596\",\n    ecma114: \"iso88596\",\n    asmo708: \"iso88596\",\n\n    greek: \"iso88597\",\n    greek8: \"iso88597\",\n    ecma118: \"iso88597\",\n    elot928: \"iso88597\",\n\n    hebrew: \"iso88598\",\n    hebrew8: \"iso88598\",\n\n    turkish: \"iso88599\",\n    turkish8: \"iso88599\",\n\n    thai: \"iso885911\",\n    thai8: \"iso885911\",\n\n    celtic: \"iso885914\",\n    celtic8: \"iso885914\",\n    isoceltic: \"iso885914\",\n\n    tis6200: \"tis620\",\n    tis62025291: \"tis620\",\n    tis62025330: \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    cspc8codepage437: \"cp437\",\n    cspc775baltic: \"cp775\",\n    cspc850multilingual: \"cp850\",\n    cspcp852: \"cp852\",\n    cspc862latinhebrew: \"cp862\",\n    cpgr: \"cp869\",\n\n    msee: \"cp1250\",\n    mscyrl: \"cp1251\",\n    msansi: \"cp1252\",\n    msgreek: \"cp1253\",\n    msturk: \"cp1254\",\n    mshebr: \"cp1255\",\n    msarab: \"cp1256\",\n    winbaltrim: \"cp1257\",\n\n    cp20866: \"koi8r\",\n    \"20866\": \"koi8r\",\n    ibm878: \"koi8r\",\n    cskoi8r: \"koi8r\",\n\n    cp21866: \"koi8u\",\n    \"21866\": \"koi8u\",\n    ibm1168: \"koi8u\",\n\n    strk10482002: \"rk1048\",\n\n    tcvn5712: \"tcvn\",\n    tcvn57121: \"tcvn\",\n\n    gb198880: \"iso646cn\",\n    cn: \"iso646cn\",\n\n    csiso14jisc6220ro: \"iso646jp\",\n    jisc62201969ro: \"iso646jp\",\n    jp: \"iso646jp\",\n\n    cshproman8: \"hproman8\",\n    r8: \"hproman8\",\n    roman8: \"hproman8\",\n    xroman8: \"hproman8\",\n    ibm1051: \"hproman8\",\n\n    mac: \"macintosh\",\n    csmacintosh: \"macintosh\",\n};\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nconst UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfor (let i = 0; i < 0x100; i++) {\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n}\n\n// Class DBCSCodec reads and initializes mapping tables.\nexports._dbcs = class DBCSCodec {\n    constructor(codecOptions, iconv) {\n        this.encodingName = codecOptions.encodingName;\n        if (!codecOptions) throw new Error(\"DBCS codec is called without the data.\");\n        if (!codecOptions.table)\n            throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n        // Load tables.\n        const mappingTable = codecOptions.table();\n\n        // Decode tables: MBCS -> Unicode.\n\n        // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n        // Trie root is decodeTables[0].\n        // Values: >=  0 -> unicode character code. can be > 0xFFFF\n        //         == UNASSIGNED -> unknown/unassigned sequence.\n        //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n        //         <= NODE_START -> index of the next node in our trie to process next byte.\n        //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n        this.decodeTables = [];\n        this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n        // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here.\n        this.decodeTableSeq = [];\n\n        // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n        for (let i = 0; i < mappingTable.length; i++) this._addDecodeChunk(mappingTable[i]);\n\n        // Load & create GB18030 tables when needed.\n        if (typeof codecOptions.gb18030 === \"function\") {\n            this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n            // Add GB18030 common decode nodes.\n            const commonThirdByteNodeIdx = this.decodeTables.length;\n            this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n            const commonFourthByteNodeIdx = this.decodeTables.length;\n            this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n            // Fill out the tree\n            const firstByteNode = this.decodeTables[0];\n            for (let i = 0x81; i <= 0xfe; i++) {\n                const secondNodeIdx = NODE_START - firstByteNode[i];\n                const secondByteNode = this.decodeTables[secondNodeIdx];\n                for (let j = 0x30; j <= 0x39; j++) {\n                    if (secondByteNode[j] === UNASSIGNED) {\n                        secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\n                    } else if (secondByteNode[j] > NODE_START) {\n                        throw new Error(\"gb18030 decode tables conflict at byte 2\");\n                    }\n\n                    const thirdNodeIdx = NODE_START - secondByteNode[j];\n                    const thirdByteNode = this.decodeTables[thirdNodeIdx];\n                    for (let k = 0x81; k <= 0xfe; k++) {\n                        const commonFourthNodeIdx = NODE_START - commonFourthByteNodeIdx;\n                        if (thirdByteNode[k] === UNASSIGNED) {\n                            thirdByteNode[k] = commonFourthNodeIdx;\n                        } else if (thirdByteNode[k] === commonFourthNodeIdx) {\n                            continue;\n                        } else if (thirdByteNode[k] > NODE_START) {\n                            throw new Error(\"gb18030 decode tables conflict at byte 3\");\n                        }\n\n                        const fourthNodeIdx = NODE_START - thirdByteNode[k];\n                        const fourthByteNode = this.decodeTables[fourthNodeIdx];\n                        for (let l = 0x30; l <= 0x39; l++) {\n                            if (fourthByteNode[l] === UNASSIGNED) fourthByteNode[l] = GB18030_CODE;\n                        }\n                    }\n                }\n            }\n        }\n\n        this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n        // Encode tables: Unicode -> DBCS.\n\n        // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n        // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n        // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n        //         == UNASSIGNED -> no conversion found. Output a default char.\n        //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n        this.encodeTable = [];\n\n        // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n        // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n        // means end of sequence (needed when one sequence is a strict subsequence of another).\n        // Objects are kept separately from encodeTable to increase performance.\n        this.encodeTableSeq = [];\n\n        // Some chars can be decoded, but need not be encoded.\n        const skipEncodeChars = {};\n        if (codecOptions.encodeSkipVals)\n            for (let i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n                const val = codecOptions.encodeSkipVals[i];\n                if (typeof val === \"number\") {\n                    skipEncodeChars[val] = true;\n                } else {\n                    for (let j = val.from; j <= val.to; j++) skipEncodeChars[j] = true;\n                }\n            }\n\n        // Use decode trie to recursively fill out encode tables.\n        this._fillEncodeTable(0, 0, skipEncodeChars);\n\n        // Add more encoding pairs when needed.\n        if (codecOptions.encodeAdd) {\n            for (const uChar in codecOptions.encodeAdd) {\n                if (hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                    this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n            }\n        }\n\n        this.defCharSB = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n        if (this.defCharSB === UNASSIGNED) {\n            this.defCharSB = this.encodeTable[0][\"?\"];\n        }\n        if (this.defCharSB === UNASSIGNED) {\n            this.defCharSB = \"?\".charCodeAt(0);\n        }\n    }\n\n    get decoder() {\n        return DBCSDecoder;\n    }\n\n    get encoder() {\n        return DBCSEncoder;\n    }\n\n    _getDecodeTrieNode(addr) {\n        const bytes = [];\n        for (; addr > 0; addr >>>= 8) bytes.push(addr & 0xff);\n        if (bytes.length === 0) bytes.push(0);\n\n        let node = this.decodeTables[0];\n        for (let i = bytes.length - 1; i > 0; i--) {\n            // Traverse nodes deeper into the trie.\n            const val = node[bytes[i]];\n\n            if (val === UNASSIGNED) {\n                // Create new node.\n                node[bytes[i]] = NODE_START - this.decodeTables.length;\n                this.decodeTables.push((node = UNASSIGNED_NODE.slice(0)));\n            } else if (val <= NODE_START) {\n                // Existing node.\n                node = this.decodeTables[NODE_START - val];\n            } else {\n                const hexAddr = addr.toString(16);\n                throw new Error(`Overwrite byte in ${this.encodingName}, addr: ${hexAddr}`);\n            }\n        }\n        return node;\n    }\n\n    _addDecodeChunk(chunk) {\n        // First element of chunk is the hex mbcs code where we start.\n        let curAddr = parseInt(chunk[0], 16);\n\n        // Choose the decoding node where we'll write our chars.\n        const writeTable = this._getDecodeTrieNode(curAddr);\n        curAddr = curAddr & 0xff;\n\n        // Write all other elements of the chunk to the table.\n        for (let k = 1; k < chunk.length; k++) {\n            const part = chunk[k];\n            if (typeof part === \"string\") {\n                // String, write as-is.\n                for (let l = 0; l < part.length; ) {\n                    const code = part.charCodeAt(l++);\n                    if (0xd800 <= code && code < 0xdc00) {\n                        // Decode surrogate\n                        const codeTrail = part.charCodeAt(l++);\n                        if (0xdc00 <= codeTrail && codeTrail < 0xe000) {\n                            writeTable[curAddr++] =\n                                0x10000 + (code - 0xd800) * 0x400 + (codeTrail - 0xdc00);\n                        } else {\n                            throw new Error(\n                                `Incorrect surrogate pair in ${this.encodingName} at chunk ${chunk[0]}`\n                            );\n                        }\n                    } else if (0x0ff0 < code && code <= 0x0fff) {\n                        // Character sequence (our own encoding used)\n                        const len = 0xfff - code + 2;\n                        const seq = [];\n                        for (let m = 0; m < len; m++) {\n                            // Simple variation: don't support surrogates or subsequences in seq.\n                            seq.push(part.charCodeAt(l++));\n                        }\n\n                        writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                        this.decodeTableSeq.push(seq);\n                    } else {\n                        writeTable[curAddr++] = code; // Basic char\n                    }\n                }\n            } else if (typeof part === \"number\") {\n                // Integer, meaning increasing sequence starting with prev character.\n                let charCode = writeTable[curAddr - 1] + 1;\n                for (let l = 0; l < part; l++) {\n                    writeTable[curAddr++] = charCode++;\n                }\n            } else\n                throw new Error(\n                    `Incorrect type '${typeof part}' given in ${this.encodingName} at chunk ${\n                        chunk[0]\n                    }`\n                );\n        }\n        if (curAddr > 0xff)\n            throw new Error(\n                `Incorrect chunk in ${this.encodingName} at addr ${chunk[0]}: too long ${curAddr}`\n            );\n    }\n\n    _getEncodeBucket(uCode) {\n        const high = uCode >> 8; // This could be > 0xFF because of astral characters.\n        if (this.encodeTable[high] === undefined) this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n        return this.encodeTable[high];\n    }\n\n    _setEncodeChar(uCode, dbcsCode) {\n        const bucket = this._getEncodeBucket(uCode);\n        const low = uCode & 0xff;\n        if (bucket[low] <= SEQ_START) {\n            // There's already a sequence, set a single-char subsequence of it.\n            this.encodeTableSeq[SEQ_START - bucket[low]][DEF_CHAR] = dbcsCode;\n        } else if (bucket[low] === UNASSIGNED) {\n            bucket[low] = dbcsCode;\n        }\n    }\n\n    _setEncodeSequence(seq, dbcsCode) {\n        // Get the root of character tree according to first character of the sequence.\n        const uCode = seq[0];\n        const bucket = this._getEncodeBucket(uCode);\n        const low = uCode & 0xff;\n\n        let node;\n        if (bucket[low] <= SEQ_START) {\n            // There's already a sequence with  - use it.\n            node = this.encodeTableSeq[SEQ_START - bucket[low]];\n        } else {\n            // There was no sequence object - allocate a new one.\n            node = {};\n            if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n            bucket[low] = SEQ_START - this.encodeTableSeq.length;\n            this.encodeTableSeq.push(node);\n        }\n\n        // Traverse the character tree, allocating new nodes as needed.\n        for (let j = 1; j < seq.length - 1; j++) {\n            const oldVal = node[uCode];\n            if (typeof oldVal === \"object\") {\n                node = oldVal;\n            } else {\n                node = node[uCode] = {};\n                if (oldVal !== undefined) node[DEF_CHAR] = oldVal;\n            }\n        }\n\n        // Set the leaf to given dbcsCode.\n        const uCode2 = seq[seq.length - 1];\n        node[uCode2] = dbcsCode;\n    }\n\n    _fillEncodeTable(nodeIdx, prefix, skipEncodeChars) {\n        const node = this.decodeTables[nodeIdx];\n        let hasValues = false;\n        const subNodeEmpty = {};\n        for (let i = 0; i < 0x100; i++) {\n            const uCode = node[i];\n            const mbCode = prefix + i;\n            if (skipEncodeChars[mbCode]) continue;\n\n            if (uCode >= 0) {\n                this._setEncodeChar(uCode, mbCode);\n                hasValues = true;\n            } else if (uCode <= NODE_START) {\n                const subNodeIdx = NODE_START - uCode;\n                if (!subNodeEmpty[subNodeIdx]) {\n                    // Skip empty subtrees (they are too large in gb18030).\n                    var newPrefix = (mbCode << 8) >>> 0; // NOTE: '>>> 0' keeps 32-bit num positive.\n                    if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars)) {\n                        hasValues = true;\n                    } else {\n                        subNodeEmpty[subNodeIdx] = true;\n                    }\n                }\n            } else if (uCode <= SEQ_START) {\n                this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n                hasValues = true;\n            }\n        }\n        return hasValues;\n    }\n};\n\n// == Encoder ==================================================================\n\nclass DBCSEncoder {\n    constructor(options, codec, backend) {\n        this.backend = backend;\n        // Encoder state\n        this.leadSurrogate = -1;\n        this.seqObj = undefined;\n\n        // Static data\n        this.encodeTable = codec.encodeTable;\n        this.encodeTableSeq = codec.encodeTableSeq;\n        this.defaultCharSingleByte = codec.defCharSB;\n        this.gb18030 = codec.gb18030;\n    }\n\n    write(str) {\n        const bytes = this.backend.allocBytes(str.length * (this.gb18030 ? 4 : 3));\n        let leadSurrogate = this.leadSurrogate,\n            seqObj = this.seqObj,\n            nextChar = -1,\n            i = 0,\n            bytePos = 0;\n\n        for (;;) {\n            // 0. Get next character.\n            let uCode;\n            if (nextChar === -1) {\n                if (i === str.length) break;\n                uCode = str.charCodeAt(i++);\n            } else {\n                uCode = nextChar;\n                nextChar = -1;\n            }\n\n            // 1. Handle surrogates.\n            if (0xd800 <= uCode && uCode < 0xe000) {\n                // Char is one of surrogates.\n                if (uCode < 0xdc00) {\n                    // We've got a lead surrogate.\n                    if (leadSurrogate === -1) {\n                        leadSurrogate = uCode;\n                        continue;\n                    } else {\n                        leadSurrogate = uCode;\n                        // Double lead surrogate found.\n                        uCode = UNASSIGNED;\n                    }\n                } else {\n                    // We've got trail surrogate.\n                    if (leadSurrogate !== -1) {\n                        uCode = 0x10000 + (leadSurrogate - 0xd800) * 0x400 + (uCode - 0xdc00);\n                        leadSurrogate = -1;\n                    } else {\n                        // Incomplete surrogate pair - only trail surrogate found.\n                        uCode = UNASSIGNED;\n                    }\n                }\n            } else if (leadSurrogate !== -1) {\n                // Incomplete surrogate pair - only lead surrogate found.\n                nextChar = uCode;\n                uCode = UNASSIGNED; // Write an error, then current char.\n                leadSurrogate = -1;\n            }\n\n            // 2. Convert uCode character.\n            let dbcsCode = UNASSIGNED;\n            if (seqObj !== undefined && uCode !== UNASSIGNED) {\n                // We are in the middle of the sequence\n                let resCode = seqObj[uCode];\n                if (typeof resCode === \"object\") {\n                    // Sequence continues.\n                    seqObj = resCode;\n                    continue;\n                } else if (typeof resCode == \"number\") {\n                    // Sequence finished. Write it.\n                    dbcsCode = resCode;\n                } else if (resCode === undefined) {\n                    // Current character is not part of the sequence.\n\n                    // Try default character for this sequence\n                    resCode = seqObj[DEF_CHAR];\n                    if (resCode !== undefined) {\n                        dbcsCode = resCode; // Found. Write it.\n                        nextChar = uCode; // Current character will be written too in the next iteration.\n                    } else {\n                        // TODO: What if we have no default? (resCode == undefined)\n                        // Then, we should write first char of the sequence as-is and try the rest recursively.\n                        // Didn't do it for now because no encoding has this situation yet.\n                        // Currently, just skip the sequence and write current char.\n                    }\n                }\n                seqObj = undefined;\n            } else if (uCode >= 0) {\n                // Regular character\n                const subtable = this.encodeTable[uCode >> 8];\n                if (subtable !== undefined) dbcsCode = subtable[uCode & 0xff];\n\n                if (dbcsCode <= SEQ_START) {\n                    // Sequence start\n                    seqObj = this.encodeTableSeq[SEQ_START - dbcsCode];\n                    continue;\n                }\n\n                if (dbcsCode === UNASSIGNED && this.gb18030) {\n                    // Use GB18030 algorithm to find character(s) to write.\n                    const idx = findIdx(this.gb18030.uChars, uCode);\n                    if (idx !== -1) {\n                        dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                        bytes[bytePos++] = 0x81 + Math.floor(dbcsCode / 12600);\n                        dbcsCode = dbcsCode % 12600;\n                        bytes[bytePos++] = 0x30 + Math.floor(dbcsCode / 1260);\n                        dbcsCode = dbcsCode % 1260;\n                        bytes[bytePos++] = 0x81 + Math.floor(dbcsCode / 10);\n                        dbcsCode = dbcsCode % 10;\n                        bytes[bytePos++] = 0x30 + dbcsCode;\n                        continue;\n                    }\n                }\n            }\n\n            // 3. Write dbcsCode character.\n            if (dbcsCode === UNASSIGNED) {\n                dbcsCode = this.defaultCharSingleByte;\n            }\n\n            if (dbcsCode < 0x100) {\n                bytes[bytePos++] = dbcsCode;\n            } else if (dbcsCode < 0x10000) {\n                bytes[bytePos++] = dbcsCode >> 8; // high byte\n                bytes[bytePos++] = dbcsCode & 0xff; // low byte\n            } else if (dbcsCode < 0x1000000) {\n                bytes[bytePos++] = dbcsCode >> 16;\n                bytes[bytePos++] = (dbcsCode >> 8) & 0xff;\n                bytes[bytePos++] = dbcsCode & 0xff;\n            } else {\n                bytes[bytePos++] = dbcsCode >>> 24;\n                bytes[bytePos++] = (dbcsCode >>> 16) & 0xff;\n                bytes[bytePos++] = (dbcsCode >>> 8) & 0xff;\n                bytes[bytePos++] = dbcsCode & 0xff;\n            }\n        }\n\n        this.seqObj = seqObj;\n        this.leadSurrogate = leadSurrogate;\n        return this.backend.bytesToResult(bytes, bytePos);\n    }\n\n    end() {\n        if (this.leadSurrogate === -1 && this.seqObj === undefined) {\n            return undefined; // All clean. Most often case.\n        }\n\n        const bytes = this.backend.allocBytes(10);\n        let bytePos = 0;\n\n        if (this.seqObj) {\n            // We're in the sequence.\n            const dbcsCode = this.seqObj[DEF_CHAR];\n            if (dbcsCode !== undefined) {\n                // Write beginning of the sequence.\n                if (dbcsCode < 0x100) {\n                    bytes[bytePos++] = dbcsCode;\n                } else {\n                    bytes[bytePos++] = dbcsCode >> 8; // high byte\n                    bytes[bytePos++] = dbcsCode & 0xff; // low byte\n                }\n            } else {\n                // See todo above.\n            }\n            this.seqObj = undefined;\n        }\n\n        if (this.leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            bytes[bytePos++] = this.defaultCharSingleByte;\n            this.leadSurrogate = -1;\n        }\n\n        return this.backend.bytesToResult(bytes, bytePos);\n    }\n\n    // Export for testing\n    findIdx(table, val) {\n        return findIdx(table, val);\n    }\n}\n\n// == Decoder ==================================================================\n\nclass DBCSDecoder {\n    constructor(options, codec, backend) {\n        this.backend = backend;\n\n        // Decoder state\n        this.nodeIdx = 0;\n        this.prevBytes = [];\n\n        // Static data\n        this.decodeTables = codec.decodeTables;\n        this.decodeTableSeq = codec.decodeTableSeq;\n        this.defaultCharUnicode = codec.defaultCharUnicode;\n        this.gb18030 = codec.gb18030;\n    }\n\n    write(buf) {\n        const chars = this.backend.allocRawChars(buf.length),\n            prevBytes = this.prevBytes,\n            prevOffset = this.prevBytes.length;\n\n        let nodeIdx = this.nodeIdx,\n            seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.\n            charPos = 0;\n\n        for (let i = 0; i < buf.length; i++) {\n            const curByte = i >= 0 ? buf[i] : prevBytes[i + prevOffset];\n\n            // TODO: Check curByte is number 0 <= < 256\n\n            // Lookup in current trie node.\n            let uCode = this.decodeTables[nodeIdx][curByte];\n\n            if (uCode >= 0) {\n                // Normal character, just use it.\n            } else if (uCode === UNASSIGNED) {\n                // Unknown char.\n                // TODO: Callback with seq.\n                uCode = this.defaultCharUnicode.charCodeAt(0);\n                i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\n            } else if (uCode === GB18030_CODE) {\n                const b1 = i >= 3 ? buf[i - 3] : prevBytes[i - 3 + prevOffset];\n                const b2 = i >= 2 ? buf[i - 2] : prevBytes[i - 2 + prevOffset];\n                const b3 = i >= 1 ? buf[i - 1] : prevBytes[i - 1 + prevOffset];\n                const ptr =\n                    (b1 - 0x81) * 12600 + (b2 - 0x30) * 1260 + (b3 - 0x81) * 10 + (curByte - 0x30);\n                const idx = findIdx(this.gb18030.gbChars, ptr);\n                uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n            } else if (uCode <= NODE_START) {\n                // Go to next trie node.\n                nodeIdx = NODE_START - uCode;\n                continue;\n            } else if (uCode <= SEQ_START) {\n                // Output a sequence of chars.\n                const seq = this.decodeTableSeq[SEQ_START - uCode];\n                for (let k = 0; k < seq.length - 1; k++) {\n                    uCode = seq[k];\n                    chars[charPos++] = uCode;\n                }\n                uCode = seq[seq.length - 1];\n            } else\n                throw new Error(\n                    `iconv-lite internal error: invalid decoding table value ${uCode} at ${nodeIdx}/${curByte}`\n                );\n\n            // Write the character to buffer, handling higher planes using surrogate pair.\n            if (uCode >= 0x10000) {\n                uCode -= 0x10000;\n                const uCodeLead = 0xd800 | (uCode >> 10);\n                chars[charPos++] = uCodeLead;\n\n                uCode = 0xdc00 | (uCode & 0x3ff);\n            }\n            chars[charPos++] = uCode;\n\n            // Reset trie node.\n            nodeIdx = 0;\n            seqStart = i + 1;\n        }\n\n        this.nodeIdx = nodeIdx;\n        this.prevBytes =\n            seqStart >= 0\n                ? Array.prototype.slice.call(buf, seqStart)\n                : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\n\n        return this.backend.rawCharsToResult(chars, charPos);\n    }\n\n    end() {\n        let ret = \"\";\n\n        // Try to parse all remaining chars.\n        while (this.prevBytes.length > 0) {\n            // Skip 1 character in the buffer.\n            ret += this.defaultCharUnicode;\n            const bytesArr = this.prevBytes.slice(1);\n\n            // Parse remaining as usual.\n            this.prevBytes = [];\n            this.nodeIdx = 0;\n            if (bytesArr.length > 0) ret += this.write(bytesArr);\n        }\n\n        this.prevBytes = [];\n        this.nodeIdx = 0;\n\n        return ret;\n    }\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val) return -1;\n\n    let l = 0,\n        r = table.length;\n    while (l < r - 1) {\n        // always table[l] <= val < table[r]\n        const mid = l + ((r - l + 1) >> 1);\n        if (table[mid] <= val) l = mid;\n        else r = mid;\n    }\n    return l;\n}\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes.\n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII,\n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    shiftjis: {\n        type: \"_dbcs\",\n        table: function () {\n            return require(\"./tables/shiftjis.json\");\n        },\n        encodeAdd: { \"\\u00a5\": 0x5c, \"\\u203E\": 0x7e },\n        encodeSkipVals: [{ from: 0xed40, to: 0xf940 }],\n    },\n    csshiftjis: \"shiftjis\",\n    mskanji: \"shiftjis\",\n    sjis: \"shiftjis\",\n    windows31j: \"shiftjis\",\n    ms31j: \"shiftjis\",\n    xsjis: \"shiftjis\",\n    windows932: \"shiftjis\",\n    ms932: \"shiftjis\",\n    \"932\": \"shiftjis\",\n    cp932: \"shiftjis\",\n\n    eucjp: {\n        type: \"_dbcs\",\n        table: function () {\n            return require(\"./tables/eucjp.json\");\n        },\n        encodeAdd: { \"\\u00a5\": 0x5c, \"\\u203E\": 0x7e },\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    gb2312: \"cp936\",\n    gb231280: \"cp936\",\n    gb23121980: \"cp936\",\n    csgb2312: \"cp936\",\n    csiso58gb231280: \"cp936\",\n    euccn: \"cp936\",\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    windows936: \"cp936\",\n    ms936: \"cp936\",\n    \"936\": \"cp936\",\n    cp936: {\n        type: \"_dbcs\",\n        table: function () {\n            return require(\"./tables/cp936.json\");\n        },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    gbk: {\n        type: \"_dbcs\",\n        table: function () {\n            return require(\"./tables/cp936.json\").concat(require(\"./tables/gbk-added.json\"));\n        },\n    },\n    xgbk: \"gbk\",\n    isoir58: \"gbk\",\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    gb18030: {\n        type: \"_dbcs\",\n        table: function () {\n            return require(\"./tables/cp936.json\").concat(require(\"./tables/gbk-added.json\"));\n        },\n        gb18030: function () {\n            return require(\"./tables/gb18030-ranges.json\");\n        },\n        encodeSkipVals: [0x80],\n        encodeAdd: { \"€\": 0xa2e3 },\n    },\n\n    chinese: \"gb18030\",\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    windows949: \"cp949\",\n    ms949: \"cp949\",\n    \"949\": \"cp949\",\n    cp949: {\n        type: \"_dbcs\",\n        table: function () {\n            return require(\"./tables/cp949.json\");\n        },\n    },\n\n    cseuckr: \"cp949\",\n    csksc56011987: \"cp949\",\n    euckr: \"cp949\",\n    isoir149: \"cp949\",\n    korean: \"cp949\",\n    ksc56011987: \"cp949\",\n    ksc56011989: \"cp949\",\n    ksc5601: \"cp949\",\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard.\n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    //\n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    windows950: \"cp950\",\n    ms950: \"cp950\",\n    \"950\": \"cp950\",\n    cp950: {\n        type: \"_dbcs\",\n        table: function () {\n            return require(\"./tables/cp950.json\");\n        },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    big5: \"big5hkscs\",\n    big5hkscs: {\n        type: \"_dbcs\",\n        table: function () {\n            return require(\"./tables/cp950.json\").concat(require(\"./tables/big5-added.json\"));\n        },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    cnbig5: \"big5hkscs\",\n    csbig5: \"big5hkscs\",\n    xxbig5: \"big5hkscs\",\n};\n","\"use strict\";\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments),\n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function (stream_module) {\n    class IconvLiteEncoderStream extends stream_module.Transform {\n        constructor(conv, options, iconv) {\n            options = options || {};\n            options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n            super(options);\n            this.conv = conv;\n            this.iconv = iconv;\n        }\n\n        _transform(chunk, encoding, done) {\n            if (typeof chunk !== \"string\") {\n                done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n                return;\n            }\n            try {\n                const res = this.conv.write(chunk);\n                if (res && res.length) this.push(res);\n                done();\n            } catch (e) {\n                done(e);\n            }\n        }\n\n        _flush(done) {\n            try {\n                const res = this.conv.end();\n                if (res && res.length) this.push(res);\n                done();\n            } catch (e) {\n                done(e);\n            }\n        }\n\n        collect(cb) {\n            const chunks = [];\n            this.on(\"error\", cb);\n            this.on(\"data\", (chunk) => chunks.push(chunk));\n            this.on(\"end\", () => cb(null, this.iconv.backend.concatByteResults(chunks)));\n            return this;\n        }\n    }\n\n    class IconvLiteDecoderStream extends stream_module.Transform {\n        constructor(conv, options) {\n            options = options || {};\n            options.encoding = \"utf8\"; // We output strings.\n            super(options);\n            this.conv = conv;\n            this.encoding = options.encoding;\n        }\n\n        _transform(chunk, encoding, done) {\n            if (!(chunk instanceof Uint8Array)) {\n                done(Error(\"Iconv decoding stream needs Uint8Array-s or Buffers as its input.\"));\n                return;\n            }\n            try {\n                const res = this.conv.write(chunk);\n                if (res && res.length) this.push(res, this.encoding);\n                done();\n            } catch (e) {\n                done(e);\n            }\n        }\n\n        _flush(done) {\n            try {\n                const res = this.conv.end();\n                if (res && res.length) this.push(res, this.encoding);\n                done();\n            } catch (e) {\n                done(e);\n            }\n        }\n\n        collect(cb) {\n            let res = \"\";\n            this.on(\"error\", cb);\n            this.on(\"data\", (chunk) => {\n                res += chunk;\n            });\n            this.on(\"end\", () => cb(null, res));\n            return this;\n        }\n    }\n\n    return {\n        IconvLiteEncoderStream,\n        IconvLiteDecoderStream,\n    };\n};\n","\"use strict\";\n// NOTE: This backend uses TextDecoder class.\n// NOTE: Web backend differs from Node in handling invalid surrogates when decoding to strings in rawCharsToResult() function.\n//   Node passes them through unchanged, web backend (actually TextDecoder) replaces them with '�'. I haven't found a\n//   performant way to unify these behaviors while keeping compatibility with Node <11 where there's no TextDecoder.\n//   Not too worried as it seems like an edge case mostly concerning utf-16/utf-32/cesu8 codecs, but something to be aware of.\n\nmodule.exports = {\n    // Encoder string input: use str directly, .length, .charCodeAt(i).\n    // Encoder bytes output: allocBytes() -> use Uint8Array -> bytesToResult().\n    allocBytes(numBytes, fill) {\n        const arr = new Uint8Array(new ArrayBuffer(numBytes));\n        if (fill != null) {\n            arr.fill(fill);\n        }\n        return arr;\n    },\n    bytesToResult(bytes, finalLen) {\n        return bytes.subarray(0, finalLen);\n    },\n    concatByteResults(bufs) {\n        bufs = bufs.filter((b) => b.length > 0);\n        if (bufs.length === 0) {\n            return new Uint8Array();\n        } else if (bufs.length === 1) {\n            return bufs[0];\n        }\n\n        const totalLen = bufs.reduce((a, b) => a + b.length, 0);\n        const res = new Uint8Array(new ArrayBuffer(totalLen));\n        let curPos = 0;\n        for (var i = 0; i < bufs.length; i++) {\n            res.set(bufs[i], curPos);\n            curPos += bufs[i].length;\n        }\n        return res;\n    },\n\n    // Decoder bytes input: use only array access + .length, so both Buffer-s and Uint8Array-s work.\n    // Decoder string output: allocRawChars -> use Uint16Array -> rawCharsToResult().\n    allocRawChars(numChars) {\n        return new Uint16Array(new ArrayBuffer(numChars * Uint16Array.BYTES_PER_ELEMENT));\n    },\n    rawCharsToResult(rawChars, finalLen) {\n        rawChars = rawChars.subarray(0, finalLen);\n        // NOTE: TextDecoder will convert all invalid surrogates to '�'-s.\n        const res = new TextDecoder(\"utf-16\", { ignoreBOM: true }).decode(rawChars);\n        if (res.length !== finalLen)\n            throw new Error(`TextDecoder returned different length string on array ${rawChars}`);\n        return res;\n    },\n\n    // Optimizations\n    // maybe buf.swap16()?\n};\n"],"sourceRoot":""}